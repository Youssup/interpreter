  1 // h2shell.c
  2 Your name here as a comment
  3 #include <stdio.h>    // for I/O
  4 #include <stdlib.h>   // for exit()
  5 #include <time.h>     // for time functions
  6 
  7 FILE *infile;
  8 
  9 // nextbyte() handles any input file size
 10 int nextbyte()
 11 {
 12    // Declaring the following variables static so they 
 13    // retain their values between calls.
 14    static unsigned char buf[100];
 15    static int numread, bufindex = sizeof(buf);
 16 
 17    if (bufindex == sizeof(buf))
 18    {
 19       // Code missing here:
 20       // Read next 100-byte block and reset bufindex to 0.
 21       // Assign to numread the number of bytes actually read. 
 22    }
 23 
 24    if (bufindex < numread)
 25    {
 26       // Code missing here:
 27       // Return byte in buf[bufindex] as an int.
 28       // Increment bufindex.
 29    }
 30    else
 31        return -1;  // -1 signals end of file
 32 }
 33 
 34 int main(int argc, char *argv[])
 35 {
 36    int i, byte;
 37    time_t timer;
 38    if (argc != 2)
 39    {
 40         printf("Wrong number of command line arguments\n");
 41         printf("Usage: h2 <input filename>\n");
 42         exit(1);
 43    }
 44 
 45    // display your name, command line args, time
 46    time(&timer);      // get time
 47    printf("YOUR NAME HERE   %s %s   %s", 
 48            argv[0], argv[1], asctime(localtime(&timer)));
 49 
 50    infile = fopen(argv[1], "rb");
 51    if (!infile)
 52    {
 53       printf("Cannot open input file %s\n", argv[1]);
 54       exit(1);
 55    }
 56 
 57    i = 0;
 58    while (1)
 59    {
 60       byte = nextbyte();
 61       if (byte == -1)
 62          break;
 63       // Code missing here:
 64       // Display byte here so that 16 bytes appear on each line,
 65       // with a space between each pair of bytes as shown in the textbook.
 66       // Use i to determine when to insert space and newline. Start
 67       // each line with the hex address of the start of that line followed
 68       // by a colon.
 69       i++;
 70    }
 71 }