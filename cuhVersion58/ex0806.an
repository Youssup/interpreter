  1 ; ex0806.a  Variable-length parameter list
  2 startup   bl main
  3           halt
  4 ;==============================================================
  5                            ; #include <stdio.h>
  6                            ; #include <stdarg.h>
  7 add:      push lr          ; int add(int argnum, ...)
  8           push fp          ; {
  9           mov fp, sp
 10 
 11           mov r0, 0        ;    int sum = 0;
 12           push r0
 13 
 14           sub sp, sp, 1    ;    va_list p;
 15                            
 16           add r0, fp, 3    ;    va_start(p, argnum)
 17           str r0, fp, -2
 18 @L0:
 19           ldr r0, fp, 2    ;    while (argnum)
 20           cmp r0, 0        ;    {
 21           brz @L1          ;    
 22 
 23           ldr r0, fp, -1   ;       sum = sum + va_arg(p, int);
 24           ldr r1, fp, -2
 25           ldr r2, r1, 0
 26           add r1, r1, 1
 27           str r1, fp, -2
 28           add r0, r0, r2
 29           str r0, fp, -1
 30 
 31           ldr r0, fp, 2    ;       argnum--;
 32           sub r0, r0, 1
 33           str r0, fp, 2
 34 
 35           br @L0           ;    }
 36 @L1:                       
 37           ldr r0, fp, -1   ;    return sum;
 38           mov sp, fp
 39           pop fp
 40           pop lr
 41           ret
 42                            ; }
 43 ;==============================================================
 44 main:     push lr          ; int main()
 45           push fp          ; {
 46           mov fp,sp        ;
 47 
 48           add sp,sp, -1    ;    int y;
 49 
 50           mov r0, 7        ;    y = add(2, 5, 7);
 51           push r0
 52           mov r0, 5
 53           push r0
 54           mov r0, 2
 55           push r0
 56           bl add
 57           add sp, sp, 3
 58           str r0, fp, -1
 59 
 60           ldr r0, fp, -1   ;    printf("%d\n", y);
 61           dout r0
 62           nl
 63 
 64           mov r0, 0        ;    return 0;
 65           mov sp, fp
 66           pop fp
 67           pop lr
 68           ret
 69                            ; }
