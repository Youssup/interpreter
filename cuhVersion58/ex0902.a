; ex0902.a  Dynamically allocating structs
startup:  bl main
          halt
;==============================================================
                           ; #include <stdio.h>
                           ; #include <stdlib.h>
                           ; struct Point
                           ; {
                           ;    int x;
                           ;    int y;
                           ; };
                           
p:        .word 0          ; struct Point *p;
                           
main:     push lr          ; int main()
          push fp          ; {
          mov fp, sp
      
          mov r1, 2        ;    p = malloc(sizeof(struct Point));
          bl malloc
          st r0, p
                            
          mov r0, 5        ;    p -> y = 5;
          ld r1, p
          str r0, r1, 1
                           
          ld r0, p         ;    printf("%d\n", p -> y);
          ldr r0, r0, 1
          dout r0
          nl
                            
          mov r0, 0        ;    return 0;
          mov sp, fp
          pop fp
          pop lr
          ret
                           ; }
;==============================================================
malloc:   ld r0, @avail    ; get address of next free block
          add r1, r0, r1   ; r1 holds size of allocation
          st r1, @avail    ; update @avail
          ret              ; return address of allocated block
@avail:  .word *+1